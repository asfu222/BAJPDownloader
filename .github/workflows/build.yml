name: Android Build

on:
  push:
    branches:
      - main
  repository_dispatch:
    types: [build-apk]
  workflow_dispatch:

jobs:
  build:
    name: Build Signed Android APKs
    runs-on: ubuntu-latest
    env:
      KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
      KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Cache Gradle data
        uses: actions/cache@v4
        with:
          path: .gradle
          key: ${{ runner.os }}-gradle--${{ hashFiles('**/settings.gradle', '**/gradle.properties') }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Signed Release APKs
        run: |
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > keystore.jks
          ./gradlew assembleRelease
      - name: Get Short Commit Hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Rename and Upload Main Build Release APK
        run: mv app/build/outputs/apk/release/app-release.apk app/build/outputs/apk/release/BAJPDownloader-main-${{ env.COMMIT_HASH }}.apk
      - name: Upload Main Build Release APK
        uses: actions/upload-artifact@v4
        with:
          name: BAJPDownloader-main-release-${{ env.COMMIT_HASH }}
          path: app/build/outputs/apk/release/BAJPDownloader-main-${{ env.COMMIT_HASH }}.apk

      - name: Rename and Upload MITM Server APK
        run: mv mitmserver/build/outputs/apk/release/mitmserver-release.apk mitmserver.apk
      - name: Deploy APK to Cloudflare R2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: auto
          AWS_ENDPOINT_URL: ${{ secrets.R2_ENDPOINT }}
          AWS_MAX_ATTEMPTS: 5
        run: |
         aws s3 cp mitmserver.apk s3://${{ secrets.R2_BUCKET }}/apk/mitmserver.apk --checksum-algorithm CRC32
         sha256sum mitmserver.apk > mitmserver.apk.hash
         aws s3 cp mitmserver.apk.hash s3://${{ secrets.R2_BUCKET }}/apk/mitmserver.apk.hash --checksum-algorithm CRC32
      - name: Purge Cloudflare Cache for APK
        run: |
           curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE_ID }}/purge_cache" \
              -H "Authorization: Bearer ${{ secrets.CF_PURGE_TOKEN }}" \
              -H "Content-Type: application/json" \
              --data '{"files": ["https://cdn.bluearchive.com/apk/mitmserver.apk", "https://cdn.bluearchive.com/apk/mitmserver.apk.date"]}'
